<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Ubuntu16.04迁移系统（系统备份与还原），亲测可行]]></title>
    <url>%2F2019%2F09%2F08%2FUbuntu16-04%E8%BF%81%E7%A7%BB%E7%B3%BB%E7%BB%9F%EF%BC%88%E7%B3%BB%E7%BB%9F%E5%A4%87%E4%BB%BD%E4%B8%8E%E8%BF%98%E5%8E%9F%EF%BC%89%EF%BC%8C%E4%BA%B2%E6%B5%8B%E5%8F%AF%E8%A1%8C%2F</url>
    <content type="text"><![CDATA[一、写在前面由于linux的核心思想是“一切皆文件”，所以我们通过拷贝所有系统文件的方式来备份及恢复系统。我的Ubuntu系统通过UEFI的方式启动，如果不清楚启动方式请自行查询UEFI+GPT和BIOS+MBR两种启动方式。 二、准备工作1. U盘（4G以上）一个，请提前备份好文件。2. 软件：UltraISO（软碟通），用于烧录系统3. ubuntu16.04镜像4. 移动硬盘（如果系统备份文件过大需要移动硬盘存储备份文件） 三、在windows下通过UltraISO（软碟通）制作live usb（即ubuntu启动盘）1. 点击图中按钮，选择镜像2. 启动-&gt;写入硬盘映像-&gt;便捷启动-&gt;写入新的驱动器引导扇区-&gt;Syslinux，成功后点击写入，等待完成。至此live usb制作完成。 四、备份系统1. 开终端，cd / 进入到根目录。2. 切换到root用户：sudo su 输入密码。3. tar cvpzf backup.tgz --exclude=/proc --exclude=/lost+found --exclude=/backup.tgz --exclude=/mnt --exclude=/sys --exclude=/media /这里排除了不需要备份的proc、lost+found、mnt、sys、media等目录。备份完成后会有提示：从上次错误的地方……（记不清了），不管它。打包完成后在根目录下会出现backup.tgz文件。此文件会比较大，将此文件备份到移动硬盘或U盘中，但FAT32格式的u盘不支持4G以上大文件。 五、开始迁移1. 换到新电脑（或新硬盘），插入u盘，开机通过F2设置uefi启动方式、u盘启动或F12选择U盘启动（不通品牌电脑按键不同），进入后选择安装ubuntu系统。等待新系统安装完成。2. 重启，依旧选择u盘启动，进入后选择 try ubuntu without install，进入U盘中的ubuntu系统。3. sudo su切换到root用户（未设置密码请先设置密码）4. 查看u盘和装ubuntu系统的盘所在目录：可以在左侧docker栏看到磁盘标志，不需要手动挂载，点一下图标即可自动挂载u盘和系统硬盘。cd /media ls查看u盘和硬盘挂载的目录。比如我的u盘挂载点是/media/cdrom ，系统盘挂载点是/media/ubuntu/46eb-38jk-fadf-hjfh-adjf4. 接下来备份两个重要的文件到u盘里。5. 首先给u盘加入写权限：mount -o remount rw /media/cdrom(换成你的路径)6. 执行cp /etc/fstab /media/cdrom和cp /boot/grub.cfg /media/cdrom 将fstab和grub.cfg文件备份到u盘中。7. 进入系统盘路径：cd /media/ubuntu/46eb-38jk-fadf-hjfh-adjf ls发现这里是新装的ubuntu系统的完整文件。执行rm -rf ./*删除所有目录。8. 插上移动硬盘将备份文件backup.tgz拷到此目录下。比如我的是：cp media/Toshiba/backup.tgz ./然后解压文件：tar xvpfz backup.tgz经过漫长等待，文件解压完毕。然后重建没有备份的文件：mkdir proc lost+found mnt sys media9. 还原与引导有关的两个文件(替换为你自己的u盘目录)：cp /media/cdrom/fstab ./etc cp/media/cdrom/grub.cfg ./boot10. 拔掉u盘硬盘，reboot重启 五、无法进入系统你以为这就结束了吗，不不，这时候很可能无法进入系统，引导会出问题，接下来进行修复，使用ubuntu官方修复工具。我们需要再次插上u盘进入live usb，选择 try ubuntu without install，进入后连接网络，打开终端依次输入：sudo add-apt-repository ppa:yannubuntu/boot-repair 添加源 sudo apt-get updatesudo apt-get install -y boot-repair 安装修复工具 boot-repair出现启动界面后点击Recommended repair，按照它的提示进行，期间会提示卸载grub引导，都选择是，会要求在终端中输入一系列命令，输入后继续，按照提示进行，修复完成后重启电脑，拔掉u盘，成功进入系统，你会发现系统恢复到了备份时的样子。 至此，恢复系统完成。 此博文完全凭记忆写成，如有错误欢迎指出，谢谢！]]></content>
  </entry>
  <entry>
    <title><![CDATA[使用hexo+github搭建免费的个人博客及主题更换，添加博客特效]]></title>
    <url>%2F2019%2F09%2F08%2F%E4%BD%BF%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%8F%8A%E4%B8%BB%E9%A2%98%E6%9B%B4%E6%8D%A2%EF%BC%8C%E6%B7%BB%E5%8A%A0%E5%8D%9A%E5%AE%A2%E7%89%B9%E6%95%88%2F</url>
    <content type="text"><![CDATA[写在前面：目前主流的在线博客平台有很多，如csdn、简书等。此次我们利用github page和hexo搭建免费的博客站，此次我在win平台下演示搭建。 一、环境准备：1.点击进入下载页：Node.jsGit注册github账号 2.下载完成后根据提示安装。3.安装完成后打开git bash命令行工具。输入node -v和git version可查看node.js和git是否安装成功，出现版本号即成功。 3.然后在你要写博客的目录下创建一个文件夹，名字随意取，如myBlog，然后输入如下命令来安装hexo： 1npm install -g hexo-cli 安装完成后，cd切换到刚才新建的文件夹myBlog中，我的在e盘下。命令行输入如下命令安装hexo： hexo init myBlog npm install 这时候文件夹中会生成5个目录和文件：其中 _config.yml 是网站设置文件，source*文件夹是博客的资源文件， *_posts 目录是存放博客的地方。 到此，hexo安装完毕，已经可以输入hexo s启动本机服务器，然后打开浏览器输入http://localhost:4000在本机服务器预览了。二、开始部署： 1.在github上新建一个 用户名.github.io 的仓库，勾选上Initialize this repository with a README,如下图： 2.下面通过SSH key配置本地git和github的连接： 如果之前没有配置过，那么秘钥需要生成。（如果之前使用过git，那么此第2步可跳过，无需再次配置。）秘钥默认路径：~/.ssh/id_rsa.pub。 下面生成秘钥： git config --global user.name &quot;用户名&quot; git config --global user.email &quot;邮箱&quot; 提示秘钥保存位置可选默认，无需更改，一路回车，最后命令行界面弹出ssh-rsa开头的即是秘钥，从“ssh-rsa”开始复制到结尾保存。 在github上填入秘钥：按图示打开github网站 Title随意起，将秘钥粘贴到Key一栏，点击 Add SSH key。 下面在git bash命令行界面输入ssh -T git@github.com来添加信任列表，提示Hi ! You’ve successfully authenticated, but GitHub does not provide shell access. 即成功！ 3.下面使用文本编辑工具打开安装目录下的 _config.yml 配置文件进行修改，我使用Editplus++打开，翻到末尾：如图输入，在repo输入你自己的地址（注意type、repo、branch的冒号后面都有一个空格！！）上面参数描述：repo:库（Repository）地址branch:分支名称。如果不指定，则默认值为 master 4.下面安装 hexo-deployer-git：git bash输入：npm install hexo-deployer-git --save然后输入hexo g和hexo d将本地文件推送到github仓库，打开https://用户名.github.io测试，是否已经看到自己博客的雏形了。 注：执行hexo g时，git在本地生成网页静态文件，执行hexo d时将public目录下的文件推送到远程仓库。 三、开始写博客：1.hexo new &#39;文章标题&#39;执行后在安装文件的/source/_posts目录下可以看到文章标题.md的文件，md是Markdown类型的文档，可以使用markdown文档编辑器书写博客。2.写完后执行命令：hexo clean hexo g hexo d,执行hexo clean是清空本地缓存，避免出现错误，建议每次上传前都执行一次。此时打开自己的博客网站看看是不是已经可以看到刚才写的博客了。 四、主题替换：这里我贴出hexo的 官方教学文档网站，可以按照文档中指引进行更换主题。文档中的主题配置文件是指主题目录下的 _config.yml 文件，比如我使用的nexT主题，配置文件在E:\myBlog\themes\next 下。这个配置文件不要和同名的站点配置文件搞混。后续通过修改配置文件中的各项参数即可实现网站及主体的配置，包括名字、头像、语言、菜单、侧边栏等。 五、给出几种主体美化方式：以我的博客为例，我添加了背景线条动态特效和鼠标点击出现彩色心心特效： 1.背景线条动态特效：我使用了nexT主体自带的特效，在主体配置文件中搜索：canvas_nest，如下输入（注意冒号后面有空格！！）： canvas_nest: enable: true onmobile: true # display on mobile or not color: &apos;0,0,0&apos; # RGB values, use &apos;,&apos; to separate opacity: 0.5 # the opacity of line: 0~1 zIndex: -1 # z-index property of the background count: 150 # the number of lines下面下载特效的资源包： git clone https://github.com/theme-next/theme-next-canvas-nest themes/next/source/lib/canvas-nest2.点击出心心特效：首先在 /themes/next/source/js/src 目录下新建文件：clicklove.js,将下面js代码粘进去： !function(e,t,a){function n(){c(&quot;.heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: &apos;&apos;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}&quot;),o(),r()}function r(){for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)}function o(){var t=&quot;function&quot;==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e){t&amp;&amp;t(),i(e)}}function i(e){var a=t.createElement(&quot;div&quot;);a.className=&quot;heart&quot;,d.push({el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()}),t.body.appendChild(a)}function c(e){var a=t.createElement(&quot;style&quot;);a.type=&quot;text/css&quot;;try{a.appendChild(t.createTextNode(e))}catch(t){a.styleSheet.cssText=e}t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)}function s(){return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;}var d=[];e.requestAnimationFrame=function(){return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e){setTimeout(e,1e3/60)}}(),n()}(window,document);打开 \themes\next\layout_layout.swig 目录，在文件末尾添加： &lt;!-- 页面点击小红心 --&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/clicklove.js&quot;&gt;&lt;/script&gt;如图： 保存后，依次进行 hexo clean hexo g hexo d进行上传，打开自己网站查看一下效果。主体可以折腾的地方还有很多，可以自行搜索教程。若文中有不对的地方烦请指出。]]></content>
  </entry>
  <entry>
    <title><![CDATA[Mysql主从同步时Slave_IO_Running：Connecting ; Slave_SQL_Running：Yes的情况故障排除]]></title>
    <url>%2F2019%2F09%2F08%2FMysql%E4%B8%BB%E4%BB%8E%E5%90%8C%E6%AD%A5%E6%97%B6Slave-IO-Running%EF%BC%9AConnecting-Slave-SQL-Running%EF%BC%9AYes%E7%9A%84%E6%83%85%E5%86%B5%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4%2F</url>
    <content type="text"><![CDATA[前几天在测试主从服务器Mysql同步时遇到了从数据库显示Slave_IO_Running：Connecting； Slave_SQL_Running：Yes的问题。 下面列举几种可能的错误原因：1.网络不通2.账户密码错误3.防火墙4.mysql配置文件问题5.连接服务器时语法6.主服务器mysql权限 我的服务器ip：主服务器ubuntu：192.168.16.105从服务器ubuntu：192.168.16.115 逐项排除：1：因为从服务器是虚拟机，网卡选择了桥接模式，ip地址确认在同一网段中，且互ping能通，排除网络问题。2：主服务器创建了账号slave密码slave的权限账号，在主服务器可以登录slave帐号，排除帐号密码问题。3：终端输入 sudo ufw disable 关闭防火墙， sudo ufw status查看防火墙，确认已关闭，排除防火墙原因。（sudo ufw enable打开防火墙）4：配置文件（1）查看主服务器配置文件：sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf，看第83行：确认log_bin和server-id已经取消注释，设置无错误。（2）查看从服务器：此处server-id只需要与主服务器不同即可，我设置为ip的末尾数字115。确认配置无错误，排除。 5.语法：（1）查看主服务器二进制日志信息show master status;（2）设置从服务器链接到master主服务器，确认语句无错误，排除。注：master_host：主服务器Ubuntu的ip地址master_log_file: 前面查询到的主服务器日志文件名master_log_pos: 前面查询到的主服务器日志文件位置 change master to master_host=&apos;192.168.16.105&apos;, master_user=&apos;slave&apos;, master_password=&apos;slave&apos;,master_log_file=&apos;mysql-bin.000011&apos;, master_log_pos=154;6.权限：(1)主服务器查看slave帐号，已设置登录ip为%(2)在从服务器上登录主服务器slave帐号测试：无法登录主服务器！打开主服务器配置文件发现43行有一条绑定主机ip的语句，问题出在这里！！！给它注释掉！保存退出。重启主服务器数据库：sudo service mysql restart(3)重新测试从服务器上登录主服务器slave帐号：登录成功！(4)重新进入从服务器链接master主服务器，start slave开启主从同步，输入show slave status \G查看从服务器状态，若开启不成功先stop slave，再start slave，可以看到Slave_IO_Runninghe和Slave_SQL_Running状态都是Yes，同步成功。]]></content>
      <categories>
        <category>MySql</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
</search>
